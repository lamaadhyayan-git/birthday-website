/* --- Setup --- */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f0f0f0;
    margin: 0;
}

/* --- Gift Box Container --- */
.gift {
    width: 200px;
    height: 200px;
    position: relative;
    cursor: pointer;
    background-color: #a55a88; /* Box body color */
    border-radius: 10px;
    transition: transform 0.5s ease-out;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    left: 50%;
}

/* The actual link inside the box */
.gift-link {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;
    font-size: 1.2rem;
    text-decoration: none;
    font-family: sans-serif;
    opacity: 0; /* Initially hidden */
    transition: opacity 0.5s 1s; /* Delay fade-in until box opens */
    z-index: 10;
}

/* --- Gift Box Lid (The top part) --- */
/* This element creates the main lid structure */
.gift::before {
    content: '';
    position: absolute;
    top: -20px; /* Position above the box */
    left: 0;
    width: 100%;
    height: 20px; /* Lid height */
    background-color: #d178aa; /* Lid color */
    border-radius: 10px 10px 0 0;
    transition: transform 1s ease-out;
    transform-origin: bottom center; /* Pivot point for lifting */
}

/* --- Gift Box Bow (Vertical ribbon) --- */
/* This element creates the vertical ribbon on the box body */
.gift::after {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    width: 20px; /* Bow thickness */
    height: 100%;
    background-color: #ffcc00; /* Bow color */
    transform: translateX(-50%);
    transition: opacity 0.3s;
    z-index: 5; /* Place ribbon above box but below lifted lid */
}

/* --- Bow (Horizontal ribbon) - using a pseudo-element on the lid --- */
/* This element creates the horizontal ribbon on the lid */
.gift::before::after {
    /* Note: Using a double pseudo-element is complex and not widely supported. 
       A simpler approach is to create a second div in the HTML or use 
       a radial-gradient on the lid, but this code keeps the simple pseudo-element structure: */
    content: '';
    position: absolute;
    top: 5px; /* Position down from the lid top */
    left: 0;
    height: 10px;
    width: 100%;
    background-color: #ffcc00; /* Bow color */
}

/* ------------------------------------- */
/* --- CLICKED (OPEN) STATE ANIMATION --- */
/* ------------------------------------- */

.gift.open::before {
    /* Lifts the lid, rotates it back, and moves it up */
    transform: translateY(-150px) rotateX(45deg) scale(0.8);
}

.gift.open::after {
    /* Hides the vertical ribbon */
    opacity: 0;
}

.gift.open .gift-link {
    /* Reveals the link text */
    opacity: 1;
}

.balloons {
  position: absolute;
  bottom: -150px;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 2;
}

.balloon {
  width: 60px;
  height: 80px;
  border-radius: 50% 50% 45% 45%;
  position: absolute;
  bottom: 0;
  animation: rise 10s ease-in infinite;
  box-shadow: inset -4px -6px 10px rgba(0,0,0,0.2);
}
.balloon::after {
  content: "";
  position: absolute;
  width: 2px;
  height: 50px;
  background: #ffb6c1;
  top: 80px;
  left: 50%;
  transform: translateX(-50%);
}

.balloon.pink { background: #ff99cc; left: 15%; animation-delay: 0s; }
.balloon.lightpink { background: #ffb6c1; left: 40%; animation-delay: 2s; }
.balloon.hotpink { background: #ff66b2; left: 65%; animation-delay: 4s; }
.balloon.deeppink { background: #ff1a75; left: 85%; animation-delay: 6s; }

@keyframes rise {
  0% { transform: translateY(0) scale(1); opacity: 1; }
  100% { transform: translateY(-110vh) scale(1.2); opacity: 0; }
}

.content{
    position: relative;
    color: #ff4d94;
    position: relative;
    left: 90%;
    top: 1px;
}

.bunny {
  position: relative;
  width: 150px;
  height: 130px;
  background: #fff;
  border-radius: 50% 50% 40% 40%;
  margin: auto;
  box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  animation: hop 2s infinite ease-in-out;
  left: -590px;
}

/* Ears */
.ear {
  position: absolute;
  width: 40px;
  height: 100px;
  background: #fff;
  border-radius: 50px;
  top: -80px;
}

.ear.left {
  left: 10px;
  transform: rotate(-10deg);
}

.ear.right {
  right: 10px;
  transform: rotate(10deg);
}

.ear::before {
  content: '';
  position: absolute;
  width: 20px;
  height: 70px;
  background: #ffb3d9;
  top: 15px;
  left: 10px;
  border-radius: 50px;
}

/* Face */
.face {
  position: absolute;
  width: 100%;
  height: 100%;
}

.eye {
  position: absolute;
  width: 12px;
  height: 12px;
  background: #000;
  border-radius: 50%;
  top: 45px;
}

.eye.left {
  left: 35px;
}

.eye.right {
  right: 35px;
}

/* Blush */
.cheek {
  position: absolute;
  width: 18px;
  height: 10px;
  background: #ffb6c1;
  border-radius: 50%;
  bottom: 35px;
}

.cheek.left {
  left: 20px;
}

.cheek.right {
  right: 20px;
}

/* Nose and Mouth */
.nose {
  position: absolute;
  top: 60px;
  left: 50%;
  width: 10px;
  height: 8px;
  background: pink;
  border-radius: 50%;
  transform: translateX(-50%);
}

.mouth {
  position: absolute;
  width: 20px;
  height: 15px;
  border-bottom: 2px solid #000;
  border-radius: 50%;
  top: 70px;
  left: 50%;
  transform: translateX(-50%);
}

/* Poppers */
.popper {
  position: absolute;
  width: 20px;
  height: 40px;
  background: linear-gradient(135deg, #ff66b2, #ff99cc);
  bottom: 0;
  border-radius: 5px;
  transform-origin: bottom;
  animation: shake 1s infinite ease-in-out;
}

.popper.left {
  position: relative;
  left: -310px;
  transform: rotate(-45deg);
}

.popper.right {
  right: 30%;
  transform: rotate(45deg);
}

/* Confetti */
.confetti div {
  position: absolute;
  width: 8px;
  height: 8px;
  background: hsl(calc(360 * var(--i)), 80%, 60%);
  top: 0;
  left: 50%;
  animation: fall 3s linear infinite;
}

.confetti div:nth-child(odd) { background: #ff66b2; }
.confetti div:nth-child(even) { background: #66ccff; }

/* Animations */
@keyframes bounce {
  0%,100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

@keyframes hop {
  0%,100% { transform: translateY(0); }
  50% { transform: translateY(-15px); }
}

@keyframes shake {
  0%,100% { transform: rotate(0deg); }
  50% { transform: rotate(10deg); }
}

@keyframes fall {
  0% { transform: translateY(-10vh) rotate(0deg); opacity: 1; }
  100% { transform: translateY(100vh) rotate(720deg); opacity: 0; }
}